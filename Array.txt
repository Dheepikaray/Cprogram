//Array Initialization


#include <stdio.h>
int main() {
    int i;
    int marks[3]={1,2,3};
    for(i=0;i<3;i++){
           printf("%d\n",marks[i]);
           
    
    }
}    
   
//user enter mark array

#include <stdio.h>
int main() {
    int i, n;
    printf("enter the limit: ");
    scanf("%d",&n);
    int marks[n];
    
    for(i=0;i<n;i++){
        printf("enter the elements: ");
        scanf("%d", &marks[i]);
    }
    printf("The elements in array are: ");
    for(i=0;i<n;i++){
        printf("%d\t",marks[i]);
    }
}

//lowest and largest


#include <stdio.h>

int main() {
    int a[50],i,n,large,small;
    printf("Enter the number of elements: ");
    scanf("%d",&n);
    printf("\nEnter the elements in array: ");
    for(i=0;i<n;i++)
         scanf("%d",&a[i]);
         
         printf("The elements in array are: ");
    for(i=0;i<n;i++){
        printf("%d\t",a[i]);
    }
         
    large=small=a[0];
    
    for(i=1;i<n;++i){
        
        if(a[i]>large)
           large=a[i];
           
        if(a[i]<small)
            small=a[i];
        
    }
    
    printf("\nlargest number in an array is: %d\n",large);
    printf("smallest number in an array is: %d",small);
    

    return 0;
}


//largest and second_largest


#include <stdio.h>

int main() {
    int a[10], n;
    int largest1, largest2, i;

    printf("enter number of elements you want in array");
    scanf("%d", &n);
    printf("enter elements");
    for (i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }
    largest1 = a[0];
    for (i = 0; i < n; i++) {
        if (a[i] > largest1) {
            largest1 = a[i];
        }
    }
    largest2 = a[0];
    for (i = 1; i < n; i++) {
        if (a[i] > largest2 && a[i] < largest1)
            largest2 = a[i];
    }
    printf("First and second largest number is %d and %d ", largest1, largest2);
}


//swap sorting

#include <stdio.h>
 
int main()
{
    int i,j,temp;
    
    int a[10]={10,9,7,8,6,5,4,2,12,11};
    for(i=0;i<10;i++){
        
        for(j=i+1;j<10;j++){
            
            if(a[j]>a[i]){
            
            temp=a[i];
            a[i]=a[j];
            a[j]=temp;
            
           
            }
        }
         
    }
   for(i=0;i<10;i++){
       printf("elements are: %d\n",a[i]);
   }
   return 0;
}

//sorting linear search

#include <stdio.h>
 
int main()
{
    int n,key=50;
    int arr[]={10,20,30,40,50};
    n=sizeof(arr)/sizeof(arr[0]);
    
   int index = findKey(n,key,arr);
  
  if(index == -1){
      printf("element not found");
  }  
  else{
      printf("element is found:%d", index);
  }
    
}

int findKey(int n,int key,int arr[]){
    
    int i;
    for(i=0;i<n;i++){
        
        if(key==arr[i]){
            
            return i;
            
        }
        
    }
    return -1;
}

//binary search

#include <stdio.h>
 
int main()
{
    int n;
    int arr[]={10,20,30,40,50,60,70};
    n=sizeof(arr)/sizeof(arr[0]);
   int key=30; 
   int left=0;
   int right=n-1;
  
  while(left<=right){
     int mid= (left+right) / 2;
     
     if(key == arr[mid]){
         
         printf("element found @ position: %d",mid+1);
         break;
     }
    else if(arr[mid]>key){
        
        right=mid-1;
    }
    else{
        left=mid+1;
    }
  }
  
  if(left>right){
      
      printf("key not found");
      
  }
  
  return 0;
  
}

//insert element to last position

#include <stdio.h>


int insertion(int arr[],int n,int key,int c){
    
    if(n>=c)
        
        return n;
        
        
        arr[n]=key;
        
        return (n+1);
    
}
 
int main()
{
    
    int arr[10]={1,2,3,4,5,6,7};
    int c=sizeof(arr)/sizeof(arr[0]);
    int n=7;
    int key=9;
    
    printf("Before insertion:");
    
    for(int i=0;i<n;i++){
        printf("%d ",arr[i]);
    }
   
   
   n = insertion(arr,n,key,c);
   
   printf("After insertion:");
   
   for(int i=0;i<n;i++){
       printf("%d ",arr[i]);
       
   }
  return 0; 
}
  
  
//insert element to user position


#include <stdio.h>


int insertion(int arr[],int n,int key,int pos){
    
    for(int i=n-1;i>=pos;i--){
        
        arr[i+1]=arr[i];}
        
       arr[pos]=key;
        
        
        
    
}
 
int main()
{
    
    int arr[10]={1,2,3,4,5,6,7};
    
    int n=7;
    int key=9;
    int pos=5;
    
    printf("Before insertion:");
    
    for(int i=0;i<n;i++){
        printf("%d ",arr[i]);
    }
   
   
   insertion(arr,n,key,pos);
  
   n++;
   
   printf("After insertion:");
   
   for(int i=0;i<n;i++){
       printf("%d ",arr[i]);
       
   }
  return 0; 
}
  
  
//insert to an sorted array


#include <stdio.h>


int insertion(int arr[],int n,int key,int c){
    
    if(n>=c){
        return n;
    }
    int i;
    for( i=n-1;(i>=0&&arr[i]>key);i--){
        
        arr[i+1]=arr[i];}
        
       arr[i+1]=key;
       
       
       return(n+1);
        
        
        
    
}
 
int main()
{
    
    int arr[10]={1,2,3,5,6,7,8};
    int c=sizeof(arr)/sizeof(arr[0]);
    int n=7;
    int key=4;
    
    
    printf("Before insertion:");
    
    for(int i=0;i<n;i++){
        printf("%d ",arr[i]);
    }
   
   
   insertion(arr,n,key,c);
   n++;
   
   
   printf("After insertion:");
   
   for(int i=0;i<n;i++){
       printf("%d ",arr[i]);
       
   }
  return 0; 
}


//deletion in an unsorted array



#include <stdio.h>

int main(){
    int i;
    int arr[]={10,2,30,40,5,60,70};
    int key=30;
    int n=sizeof(arr)/sizeof(arr[0]);
    
    printf("Array before deletion:");
     for(i=0;i<n;i++)
        printf("%d ", arr[i]);
    
    n = deleteElement(arr,key,n);
    
    
    printf("\nArray after deletion:");
        for( i=0;i<n;i++){
            printf("%d ", arr[i]);
        }
    
     } 
      
         
int deleteElement(int arr[],int key,int n )
{
   int pos=linear(arr,n,key);
   
   if(pos==-1){
        printf("\nelement not found");
        
        return n;
   }
   
   int i;
   for(i=pos;i<n-1;i++){
       
       arr[i]=arr[i+1];
   }
   return n-1;
   
    
    
    
} 


//deletion in sorted array


#include <stdio.h>

int main(){
    int i;
    int arr[]={10,20,30,40,50,60,70};
    int key=30;
    int n=sizeof(arr)/sizeof(arr[0]);
    
    printf("Array before deletion:");
     for(i=0;i<n;i++)
        printf("%d ", arr[i]);
    
    n = deleteElement(arr,n,key);
    
    
    printf("\nArray after deletion:");
        for( i=0;i<n;i++){
            printf("%d ", arr[i]);
        }
    
     } 
      
         
int deleteElement(int arr[],int n,int key )
{
   int pos=binary(arr,0,n-1,key);
   
   if(pos==-1){
        printf("\nelement not found");
        
        return n;
   }
   
   int i;
   for(i=pos;i<n-1;i++){
       
       arr[i]=arr[i+1];
   }
   return n-1;
   
} 

int binary(int arr[],int left,int right,int key){
    
    if(left>right)
        return -1;
        
    int mid=(left+right)/2;
    
    
    if(arr[mid]==key)
        return mid;
        
    if(key>arr[mid])
        return binary(arr,(mid+1),right,key);
        
        return binary(arr,left,(mid-1),key);
    
    
}


//Bubble sort


#include<stdio.h>

int main(){
    
    int arr[]={30,50,20,60,40,70};
    
    int n=sizeof(arr)/sizeof(arr[0]);
    
    for(int i=0;i<n;i++){
        for(int j=0;j<n-i-1;j++){
            if(arr[j]>arr[j+1]){
                int temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
    }
    int i;
    printf("sorted array is:");
      for(i=0;i<n;i++)
            printf("%d ",arr[i]);
    
}

//selection sort

#include<stdio.h>

int main(){
    
   int arr[]={20,40,10,50,30,60};
   int n=sizeof(arr)/sizeof(arr[0]);
   
   selectionSort(arr,n);
   int i;
   printf("sorted array is:");
      for(i=0;i<n;i++)
            printf("%d ",arr[i]);
   
    }
    
int selectionSort(int arr[],int n)
{
    
    
    int i,j,min;
    
    for(i=0;i<n-1;i++)
    {
        
        min=i;
        for(j=i+1;j<n;j++)
            if(arr[j]<arr[min])
                min=j;
            
        
           if(min!=i)
             swap(&arr[min],&arr[i]);
            
        
            
        
    }
}  

int swap(int *a,int *b){
    
    int temp=*a;
        *a=*b;
        *b=temp;
    
    
}
    










